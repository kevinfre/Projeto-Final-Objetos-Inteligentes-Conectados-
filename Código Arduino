#include <Arduino.h>
#include "WiFi.h"
#include "ThingSpeak.h"
#include "DHT.h"

#define DHTPIN 4 
#define CHANNEL_ID 1403136
#define CHANNEL_API_KEY "W0E6HKL8LRRH8I00"
#define DHTTYPE DHT11

WiFiClient client;


DHT dht(DHTPIN, DHTTYPE);


#define WIFI_NETWORK "FGHN"
#define WIFI_PASSWORD "cp04182126"
#define WIFI_TIMEOUT_MS 20000

void connectToWiFi(){
  Serial.print("Conectando ao WiFi");
  WiFi.mode(WIFI_STA);
  WiFi.begin(WIFI_NETWORK, WIFI_PASSWORD);


  unsigned long startAttemptTime = millis();

  while(WiFi.status() != WL_CONNECTED && millis() - startAttemptTime < WIFI_TIMEOUT_MS){
    Serial.print(".");
    delay(100);
  }

  if(WiFi.status() != WL_CONNECTED){
    Serial.println("Conexão falhou!");
    
  }else {
    Serial.print("Conectado com Sucesso ao ip: ");
    Serial.println(WiFi.localIP());
  }
}



void setup() {
  pinMode(2,OUTPUT);
  Serial.begin(9600);
  connectToWiFi();
  ThingSpeak.begin(client);
  Serial.println(F("Testando Sensor"));
  dht.begin();
  
  

}

void loop() {
  
  // Lendo umidade
  float h = dht.readHumidity();
  // Lendo temperatura como Celsius
  float t = dht.readTemperature();
  // Ler temperatura como Fahrenheit caso esteja true (isFahrenheit = true)
  float f = dht.readTemperature(true);

  // Checando se alguma leitura falhou.
  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }

  // Caso a temperatura seja maior ou igual a X, é enviado
  // um sinal para o relé ser ligado no HIGH. Com isso liga
  // a ventoinha.
  
  if ( t >= 28){
    digitalWrite(2,HIGH);
    delay(500);
  } else {
    digitalWrite(2,LOW);
    delay(500);
  }

  // Mostra a sensação térmica em Farenheit
  float hif = dht.computeHeatIndex(f, h);
  // Mostra a sensação térmica em Celsius (isFahreheit = false)
  float hic = dht.computeHeatIndex(t, h, false);

  Serial.print(F("Umidade: "));
  Serial.print(h);
  Serial.print(F("%  Temperatura: "));
  Serial.print(t);
  Serial.print(F("°C "));
  Serial.print(f);
  Serial.print(F("°F  Sensação térmica: "));
  Serial.print(hic);
  Serial.print(F("°C "));
  Serial.print(hif);
  Serial.println(F("°F"));

  
  ThingSpeak.setField(1,h);
  ThingSpeak.setField(2,t);

  ThingSpeak.writeFields(CHANNEL_ID, CHANNEL_API_KEY);
  

  delay(15000);
  
}
